// Exercici 3: Conversions de Tipus
// Ara ja coneixem els diferents tipus de dades que podem utilitzar a JS. Tenim un total de 8 tipus b√†sics:

// 7 tipus de dades primitius:

// number per a n√∫meros de qualsevol tipus: enteros o de punt flotant, els enters estan limitats per ¬±(253-1).
// bigint per a n√∫meros enters de longitud arbitr√†ria.
// string per a cadenes. Una cadena pot tenir zero o m√©s car√†cters, no hi ha un tipus especial per a un √∫nic car√†cter.
// boolean per a vertader i fals: true/false.
// null per a valors desconeguts ‚Äì un tipus independent que t√© un sol valor nul: null.
// undefined per a valors no assignats ‚Äì un tipus independent que t√© un √∫nic valor "indefinit": undefined.
// symbol per a identificadors √∫nics.
// 1 un tipus de dada no primitiu

// object per a estructures de dades complexes.
// L'operador typeof ens permet veure quin tipus est√† emmagatzemat en una variable.

// Hi ha dues formes: typeof x o typeof(x). Retorna una cadena amb el nom del tipus. Per exemple, "string".

// üìå Pel valor null, retorna "object": aix√≤ √©s un error en el llenguatge, en realitat no √©s un objecte.

// D'altra banda, la majoria de vegades, els operadors i funcions converteixen autom√†ticament els valors que els passen al tipus correcte. Aix√≤ ho anomenem "Conversi√≥ de tipus". Per exemple alert fa la conversi√≥ de qualssevol valor a string per mostrar-ho. O els operadors aritm√®tics converteixen els valors a n√∫meros.

// Ara b√©, a vegades ens pot anar b√© poder fer nosaltres mateixos la conversi√≥. Fes un cop d'ull al seg√ºent recurs si ho necessites https://es.javascript.info/type-conversions i afegeix les conversions necess√†ries per realitzar els seg√ºents exercicis:

// Exercici 3.1:
// // Codi inicial
// let num1 = prompt('Introdueix el primer n√∫mero:');
// let num2 = prompt('Introdueix el segon n√∫mero:');

// let resultat = num1 + num2;

// alert('El resultat de la suma √©s: ' + resultat);
//-SOLUCI√ì-EX3.1-//

let num1 = prompt('Introdueix el primer n√∫mero:');
let num2 = prompt('Introdueix el segon n√∫mero:');

let resultat = num1 + num2;

alert('El resultat de la suma √©s: ' + resultat);
//Fer la conversi√≥ de tipus de string a number
let resultat = Number(num1) + Number(num2);
//Fer la conversi√≥ de tipus de string a number
let resultat = parseInt(num1) + parseInt(num2);
//Fer la conversi√≥ de tipus de string a number
let resultat = +num1 + +num2;
